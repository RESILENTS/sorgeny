import telebot
import requests
import json
import sqlite3
from telebot import types
from random import randint
from config import token

bot=telebot.TeleBot(token)
ADMIN = 1938749145
idcanal = 1001418408821

conn = sqlite3.connect('db.db', check_same_thread=False)
cursor = conn.cursor()

@bot.message_handler(commands=["start"])
def welcome(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_main1 = types.KeyboardButton(text="üì© –ü–æ–ª—É—á–∏—Ç—å —Ö–∞–π–¥")
    btn_main2 = types.KeyboardButton(text="üì§ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
    btn_main3 = types.KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.add(btn_main1, btn_main2)
    keyboard.add(btn_main3)
    bot.send_message(message.chat.id, 'üè† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',parse_mode='HTML', reply_markup=keyboard)

    userid = str(message.chat.id)
    text = "<b>SORGENY</b> ‚Äî –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∫—Ä—ã—Ç—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤.\n\n–£ –º–µ–Ω—è –µ—Å—Ç—å –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–ª–∏—Ç—ã—Ö —Ö–∞–π–¥–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–ª–æ—â–∞–¥–æ–∫. –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è."
    img = open ('welc.webp', 'rb')
    keyboard = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="üì© –ü–æ–ª—É—á–∏—Ç—å —Ö–∞–π–¥", callback_data="getlink3")
    btn2 = types.InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="test")
    btn3 = types.InlineKeyboardButton(text="üí≠ –ù–∞—à —á–∞—Ç", callback_data="uabtn")
    btn4 = types.InlineKeyboardButton(text="üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", callback_data="test")
    btn5 = types.InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="test")
    btn6 = types.InlineKeyboardButton(text="üë• –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="test")

    keyboard.add(btn1, btn2)
    keyboard.add(btn3, btn4)
    keyboard.add(btn5, btn6)
    bot.send_photo(message.from_user.id, img, caption=text, reply_markup=keyboard, parse_mode='html')

@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_text(message):  
    if message.text == "admin666":
        if message.from_user.id == ADMIN:
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="üîó –ù–æ–≤—ã–π –ø–æ—Å—Ç", callback_data="go_to_db")
            btn2 = types.InlineKeyboardButton(text="üì• –ó–∞–ø—Ä–æ—Å—ã", callback_data="test")
            btn3 = types.InlineKeyboardButton(text="üìÉ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="test")
            keyboard.add(btn1, btn2)
            keyboard.add(btn3)
            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.", reply_markup=keyboard, parse_mode='Markdown')
        
    if message.text == "üì© –ü–æ–ª—É—á–∏—Ç—å —Ö–∞–π–¥":
        global link_idm
        link_idm = message.text
        msg = bot.send_message(message.chat.id, f'''üîç  <b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>
	
‚ö†Ô∏è  <b>–í–ù–ò–ú–ê–ù–ò–ï!</b> –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å—Å—ã–ª–∫—É —Å –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º —Ç–æ <b>–ë–û–¢</b> –Ω–µ —Å–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
        
üü¢  <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã:</b>
 ‚Äî slivup.cc
 ‚Äî s1.slivup.net''',parse_mode='HTML')
        bot.register_next_step_handler(msg, getlinkm)

def getlinkm(message):
        global link_coment, link_text, sql, link_id
        conn = sqlite3.connect('db.db')
        cursor = conn.cursor()
        link_coment = ""
        link_text = ""
        link_id = message.text
        sql = "SELECT * FROM links WHERE link_id =?"
        result = cursor.fetchall()
        for row in cursor.execute(sql, ([link_id])):
                if  result.fetchone() is None: 
                      bot.send_message(message.chat.id, "test")
                else:
            link_id = list(row)[0]
            link_coment = list(row)[1]
            link_text = list(row)[2]
        bot.send_message(message.chat.id, f'''üîç  <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:</b>

üîó  <b>–°—Å—ã–ª–∫–∞ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: </b>
{link_id}

üîê  <b>–°–∫—Ä—ã—Ç–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ: </b>
{link_text}

''', parse_mode='HTML')

def add1(message):
        global m1
        m1 = message.text
        msg = bot.send_message(message.chat.id, '‚ûï –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É.',parse_mode='HTML')
        bot.register_next_step_handler(msg, add2)

def add2(message):
        global m2
        m2 = message.text
        msg = bot.send_message(message.chat.id, '‚ûï –í–≤–µ–¥–∏—Ç–µ —Å–∫—Ä—ã—Ç–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.',parse_mode='HTML')
        bot.register_next_step_handler(msg, add3)

def add3(message):
        global m3
        m3 = message.text
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(text='‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç',callback_data=f'–ø—Ä–∏–Ω—è—Ç—å–∑–∞—è–≤–∫—É_{message.chat.id}'))
        bot.send_message(message.chat.id, f'''–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:

‚óæ –°—Å—ã–ª–∫–∞: {m1}
‚óæ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä—ã—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {m3}

‚óæ –ö–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:
{m2}''',parse_mode='HTML',reply_markup=keyboard)

def db_table_val(link_id: str, link_coment: str, link_text: str):
    params = (link_id, link_coment, link_text)
    cursor.execute(f'''INSERT INTO links (link_id, link_coment, link_text) VALUES ('{m1}', '{m3}', '{m2}')''')
    conn.commit()
        
@bot.callback_query_handler(func=lambda call:True)
def podcategors(call):
    if call.data == 'go_to_db':
        msg = bot.send_message(call.message.chat.id, '‚ûï –í–≤–µ–¥–∏—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Å—ã–ª–∫—É.\n\n –í–Ω–∏–º–∞–Ω–∏–µ! –ü–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.',parse_mode='HTML')
        bot.register_next_step_handler(msg, add1)

    if call.data == 'getlink2':
        msg = bot.send_message(call.message.chat.id, '‚ûï –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',parse_mode='HTML')
        bot.register_next_step_handler(msg, getlinkm)
	
    if call.data == 'getlink3':
        bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
        text = "‚ûï –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        img = open ('welc.webp', 'rb')
        keyboard = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text="üì© –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å", callback_data="uabtn")
        btn2 = types.InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")
        keyboard.add(btn1, btn2)
        msg = bot.send_photo(call.message.chat.id, img, caption=text, reply_markup=keyboard, parse_mode='html')
        bot.register_next_step_handler(msg, getlinkm)

    if call.data[:14] == '–ø—Ä–∏–Ω—è—Ç—å–∑–∞—è–≤–∫—É_':
        idasd = call.data[14:]
        bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
        main = telebot.types.ReplyKeyboardMarkup(True)
        bot.send_message(idasd,reply_markup=main, text='hhh')

        link_id = {m1}
        link_coment = {m3}
        link_text = {m2}
        db_table_val(link_id=link_id, link_coment=link_coment, link_text=link_text)

    if call.data == 'go_home':
        bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
        text = "SORGENY ‚Äî –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∫—Ä—ã—Ç—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤.\n\n–£ –º–µ–Ω—è –µ—Å—Ç—å –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–ª–∏—Ç—ã—Ö —Ö–∞–π–¥–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–ª–æ—â–∞–¥–æ–∫. –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è."
        img = open ('welc.webp', 'rb')
        keyboard = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text="üì© –ü–æ–ª—É—á–∏—Ç—å —Ö–∞–π–¥", callback_data="getlink3")
        btn2 = types.InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="test")
        btn3 = types.InlineKeyboardButton(text="üí≠ –ù–∞—à —á–∞—Ç", callback_data="test")
        btn4 = types.InlineKeyboardButton(text="üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", callback_data="test")
        btn5 = types.InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="test")
        btn6 = types.InlineKeyboardButton(text="üë• –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="test")

        keyboard.add(btn1, btn2)
        keyboard.add(btn3, btn4)
        keyboard.add(btn5, btn6)
        bot.send_photo(call.message.chat.id, img, caption=text, reply_markup=keyboard, parse_mode='html')

        if call.data == "uabtn":
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="üì• –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", callback_data="uabtn1_1")
            btn2 = types.InlineKeyboardButton(text="üì§ –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å–ª–∏–≤", callback_data="uabtn1_2")
            keyboard.add(btn1)
            keyboard.add(btn2)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üìå –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —Ä–µ–∂–∏–º –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.", reply_markup=keyboard, parse_mode='Markdown')

        if call.data == "uabtn1_1":
            uabtn1_1_message = bot.send_message(chat_id=call.message.chat.id, text="üì• *–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–¥ —Ö–∞–π–¥–æ–º.*\n\n‚ÑπÔ∏è –í–≤–µ–¥–∏—Ç–µ ID —Ç–µ–º—ã –Ω–∞ —Ñ–æ—Ä—É–º–µ –¥–ª—è —Å–ª–∏–≤–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–æ–¥ —Ö–∞–π–¥–æ–º.", parse_mode='Markdown')
            bot.register_next_step_handler(uabtn1_1_message, auto_number_check)
		
        if call.data == "uabtn1_2":
            uabtn1_2_message = bot.send_message(chat_id=call.message.chat.id, text="üì§ *–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–ª–∏–≤ —Ö–∞–π–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.*\n\n‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω—É–∂–Ω—É—é –≤–∞–º —Ç–µ–º—É –¥–ª—è —Å–ª–∏–≤–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–æ–¥ —Ö–∞–π–¥–æ–º.", parse_mode='Markdown')
            bot.register_next_step_handler(uabtn1_2_message, getcontact)
	
bot.polling(none_stop = True, interval = 0)
